name: Deploy to aws
on: 
  push:
    branches:
    - dev
    - prod

jobs:
  automated_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Testscript
        run: |
          echo "Testscripts need to be defined and applied here"
          ls -la

      #- name: Setup Cloud Formation Linter
      #  uses: scottbrenner/cfn-lint-action@v2
      
      #- name: Run the CloudFormation Template Tester (Linter)
      #  run: |
      #    cfn-lint --version
      #    cfn-lint -t aws_infrastructure_provisioning/Lambda_GlueWorkflow_deploy.yml

  dev_configure_aws:
    if: ${{ github.ref == 'refs/heads/dev' }} 
    needs: automated_test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '12'
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1
      - name: Copy Data into dev environment
        if: ${{ github.ref == 'refs/heads/dev' }}
        run: |
          echo "Hello"
          echo "Copy data to development environment on aws server on branch $GITHUB_REF"
          ls -la
          aws s3 sync ./glue_pyspark_job  s3://${{ secrets.DEV_TWEETS_SOURCE_META }}/pyspark_script/
          cd lambda_tweets_loader
          zip -r ../TweetLoaderZIP.zip .
          cd ../ 
          ls -la
          aws s3 cp TweetLoaderZIP.zip s3://${{ secrets.DEV_TWEETS_SOURCE_META }}/lambda-source/

      - name: Set parameters for dev environment
        if: ${{ github.ref == 'refs/heads/dev' }}
        run: |
          aws ssm put-parameter --name current_env --value "dev"  --type "String" --overwrite
          #cd user_ids
          ls -la
          #cat user_ids.txt
          #cd ../
          cat ./user_ids/user_ids.txt
          user_ids=`cat ./user_ids/user_ids.txt`
          aws ssm put-parameter --name UserIDs --value $user_ids  --type "String" --overwrite
          aws ssm put-parameter --name DEV_TWEETS_DATA --value ${{ secrets.DEV_TWEETS_DATA }}  --type "String" --overwrite
          aws ssm put-parameter --name DEV_TWEETS_SOURCE_META --value ${{ secrets.DEV_TWEETS_SOURCE_META }}  --type "String" --overwrite
          aws ssm put-parameter --name TWEET_STARTDATE_DEFAULT --value ${{ secrets.TWEET_STARTDATE_DEFAULT }}  --type "String" --overwrite


  prod_configure_aws:
    if: ${{ github.ref == 'refs/heads/prod' }}
    needs: automated_test
    environment: prod 
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '12'
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Copy Data into prod environment
        if: ${{ github.ref == 'refs/heads/prod' }}
        run: |
          echo "Hello"
          echo "Copy data to development environment on aws server on branch $GITHUB_REF"
          ls -la
          aws s3 sync ./glue_pyspark_job  s3://${{ secrets.PROD_TWEETS_META_SOURCE }}/pyspark_script/
          cd lambda_tweets_loader
          zip -r ../TweetLoaderZIP.zip .
          cd ../ 
          ls -la
          aws s3 cp TweetLoaderZIP.zip s3://${{ secrets.PROD_TWEETS_META_SOURCE }}/lambda-source/

      - name: Set parameters for prod environment
        if: ${{ github.ref == 'refs/heads/prod' }}
        run: |
          aws ssm put-parameter --name current_env --value "dev"  --type "String" --overwrite
          #cd user_ids
          ls -la
          #cat user_ids.txt
          #cd ../
          cat ./user_ids/user_ids.txt
          user_ids=`cat ./user_ids/user_ids.txt`
          aws ssm put-parameter --name UserIDs --value $user_ids  --type "String" --overwrite
          aws ssm put-parameter --name PROD_TWEETS_DATA --value ${{ secrets.PROD_TWEETS_DATA }}  --type "String" --overwrite
          aws ssm put-parameter --name PROD_TWEETS_META_SOURCE --value ${{ secrets.PROD_TWEETS_META_SOURCE }}  --type "String" --overwrite
          aws ssm put-parameter --name TWEET_STARTDATE_DEFAULT --value ${{ secrets.TWEET_STARTDATE_DEFAULT }}  --type "String" --overwrite

  dev_deploy_cloudformation_template:
    if: ${{ github.ref == 'refs/heads/dev' }}
    needs: dev_configure_aws
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '12'
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1
      - name: Deploy to AWS CloudFormation
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: dev-tweet-analyzer-stack
          template: aws_infrastructure_provisioning/Lambda_GlueWorkflow_deploy.yml
          parameter-overrides: "Environmentval=dev,DataBucket=${{ secrets.DEV_TWEETS_DATA }},MetaBucket=${{ secrets.DEV_TWEETS_SOURCE_META }},PathIngestCrawler=s3://${{ secrets.DEV_TWEETS_DATA }}/dev/timeline/,GlueJobTempPath=s3://${{ secrets.DEV_TWEETS_SOURCE_META }}/GlueJobTemp/, PathProcessedTweets=s3://${{ secrets.DEV_TWEETS_DATA }}/dev/tweet_entities/,PathGlueJobScript=s3://${{ secrets.DEV_TWEETS_SOURCE_META }}/pyspark_script/get_entities_sentiment.py"

  prod_deploy_cloudformation_template:
    if: ${{ github.ref == 'refs/heads/prod' }}
    needs: prod_configure_aws
    environment: prod 
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '12'
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1
      - name: Deploy to AWS CloudFormation
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: prod-tweet-analyzer-stack
          template: aws_infrastructure_provisioning/Lambda_GlueWorkflow_deploy.yml
          parameter-overrides: "Environmentval=prod,DataBucket=${{ secrets.PROD_TWEETS_DATA }},MetaBucket=${{ secrets.PROD_TWEETS_META_SOURCE }},PathIngestCrawler=s3://${{ secrets.PROD_TWEETS_DATA }}/prod/timeline/,GlueJobTempPath=s3://${{ secrets.PROD_TWEETS_META_SOURCE }}/GlueJobTemp/, PathProcessedTweets=s3://${{ secrets.PROD_TWEETS_DATA }}/prod/tweet_entities/,PathGlueJobScript=s3://${{ secrets.PROD_TWEETS_META_SOURCE }}/pyspark_script/get_entities_sentiment.py"
